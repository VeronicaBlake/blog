(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{494:function(e,t,s){"use strict";s.r(t);var a=s(2),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"javascript-promises"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-promises"}},[e._v("#")]),e._v(" JavaScript Promises")]),e._v(" "),s("p",[e._v("Afternoon Project: https://github.com/VeronicaBlake/gregslist-api")]),e._v(" "),s("h2",{attrs:{id:"what-are-the-three-states-of-a-promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-three-states-of-a-promise"}},[e._v("#")]),e._v(" What are the three states of a Promise?")]),e._v(" "),s("p",[e._v("Pending: Initial State, before the Promise succeeds or fails - promise is waiting for its time to come (data is requested )")]),e._v(" "),s("p",[e._v("Resolved: Completed Promise - information is received from the server, promise completed")]),e._v(" "),s("p",[e._v("Rejected: Failed Promise - information is not received, error message sent and promise failed")]),e._v(" "),s("hr"),e._v(" "),s("h2",{attrs:{id:"how-do-promises-seek-to-resolve-the-issues-of-callback-hell"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-do-promises-seek-to-resolve-the-issues-of-callback-hell"}},[e._v("#")]),e._v(' How do promises seek to resolve the issues of "callback hell"?')]),e._v(" "),s("p",[e._v("Promises can utilize chaining, which allows multiple callbacks to be attached to a single promise. This saves us from callback hell (callbacks on callbacks on callbacks), and makes the code cleaner to read and run.")]),e._v(" "),s("hr"),e._v(" "),s("h2",{attrs:{id:"what-is-the-difference-between-then-and-catch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-difference-between-then-and-catch"}},[e._v("#")]),e._v(" What is the difference between .then() and .catch()?")]),e._v(" "),s("p",[e._v(".then() - called after the promise is resolved, and only runs if the promise is resolved.\n.catch() - is called after the promise fails, and only runs if the promise fails. It is written after .then().")])])}),[],!1,null,null,null);t.default=r.exports}}]);